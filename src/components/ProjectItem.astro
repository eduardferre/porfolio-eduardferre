---
import GitHubIcon from '@/icons/GitHubIcon.astro'
import LinkButton from './LinkButton.astro'
import ExternalLinkIcon from '@/icons/ExternalLinkIcon.astro'

interface Props {
  title: string
  description: string
  link?: {
    name: string
    href: string
  }
  github?: {
    name: string
    href: string
  }[]
  image: string
  tags: {
    name: string
    class: string
    icon: (_props: Record<string, any>) => any
  }[]
}

const { title, description, link, github, image, tags } = Astro.props
---

<article
  class="flex flex-col space-x-0 space-y-8 group md:flex-row md:space-x-8 md:space-y-0"
>
  <div class="w-full md:w-1/2">
    <a
      class="relative flex flex-col items-center col-span-6 row-span-5 gap-8
            transition duration-500 ease-in-out transform shadow-xl overflow-clip rounded-xl sm:rounded-xl md:group-hover:-translate-y-1 md:group-hover:shadow-2xl
            lg:border lg:border-gray-800 lg:hover-gray-700 lg:hover:bg-gray-800/50"
      href={link && link.href}
      target="_blank"
      rel="noopener noreferrer"
    >
      <img
        src={image}
        alt={`Screenshot from project: ${title}`}
        loading="lazy"
        class="object-cover object-top w-full sm:h-full md:scale-110
             transition duration-500 md:group-hover:scale-105"
      />
    </a>
    <footer class="flex flex-wrap items-end justify-start gap-x-4 gap-y-4 mt-4">
      {
        github &&
          github.map((repo) => (
            <LinkButton href={repo.href}>
              <GitHubIcon class="size-4" />
              <span class="text-s">{repo.name}</span>
            </LinkButton>
          ))
      }
      {
        link && (
          <LinkButton href={link.href}>
            <ExternalLinkIcon class="size-4" />
            <span class="text-s">{link.name}</span>
          </LinkButton>
        )
      }
    </footer>
  </div>

  <div class="w-full md:w-1/2 md:max-w-lg">
    <h3 class="text-2xl font-bold text-purple-600 mb-2">{title}</h3>
    <div class="flex flex-wrap mt-2">
      <ul class="flex flex-row gap-x-2 mb-2">
        {
          tags.map((tag) => (
            <li>
              <span
                class={`flex gap-x-2 rounded-full text-xs ${tag.class} py-1 px-2`}
              >
                <tag.icon class="size-4" />
                {tag.name}
              </span>
            </li>
          ))
        }
      </ul>

      <div class="mt-2 text-pretty text-gray-700 dark:text-gray-400">
        {description}
      </div>
    </div>
  </div>
</article>
